Coding a solution
1. Read the question TWICE
2. MAKE OBSERVATIONS 
   THINK THINK THINK on how to use an algorithm
   COME UP WITH AN ALGORITHM/APPROACH
   DERIVE TIME COMPLEXITY
3. CHECK THE VIDEO EXPLANATION
4. UNDERSTAND and OWN the optimal solution
5. WRITE CODE
6. IF UNABLE TO WRITE CODE
   CHECK THE CODE HINTS AND WRITE THE NEXT FEW LINES 
   REPEAT THE PROCESS
7. DO A SINGLE DRY RUN
8. TEST FEW CORNER cases
9. NOW TEST THE CODE
10. TIME TO TAKE A HELP

- HAVE 3 - 3hour practice solving problems in Java, 2 days before session


Are you able to do the following
1. Did you understand the problem fully?
2. Would you be able to explain this question to someone else?
3. What and how many inputs are required?
4. What would be the output for those inputs
5. Do you need to separate out some modules or parts from the problem?
6. Do you have enough information to solve that question? If not then read the question again or clear it to the interviewer.
7. Are you able to Explain the approach to a friend

min 5 max 8 question

Spaced repetition
1. SOLVE problem in mind (no coding)
2. Think of the APPROACH
3. Come up with CORNER cases
4. Mention the time complexity and space complexity
5. Look at code
6. 3 day - 1 week - 1 month

1. The best technique we’ve seen – SOLVE the problem again in 3 days. 
   Then in a week. Then in a month. It will become second nature to you.
2. Use a paper while coding

1-2 sessions
min 2 max 4 repetiion


Strategy to solve diffetent categories of problem in time

CATEGORY - 1 (Have an optimal approach, able to code, correct answer)
- Good job, code fast move on

CATEGORY - 2 (Have an optimal approach, able to code, missing corner cases(TLE))
- Get help or check solution FAST 

CATEGORY - 3 (Can't build intuition/Can't think of an approach)
- Spend 15 minutes, understand problem, try few patterns
  Now look at the solution and code it

CATEGORY - 4 (Approach is sub-optimal, can't think of optimal approach)
- Don't waste time writing code. Look at the solution NOW
- UNDERSTAND where did we digress(differentiate) ourselves from the optimal solution

CATEGORY - 5 (Have an approach but not sure if it is optimal, difficulty writing code)
- Have a pomodoro timer of 2, 25-minute sessions
  If timer runs out, look at the solution
- Do a dry run for a sample case
- If you get a wrong answer, look at the solution
- STOP FIDDLING WITH THE VARIABLES



